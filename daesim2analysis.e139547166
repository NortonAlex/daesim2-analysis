/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/plantcarbonwater.py:459: RuntimeWarning: divide by zero encountered in divide
  r_ws = (airP/(self.Site.R_w_mol*(leafTempC+273.15)))/gsw    ## converts stomatal conductance (mol H2O m-2 s-1) to stomatal resistance (s m-1)  (see Nobel (2009) Section 8.1F) TODO: Check this and cross-check it with calculations of stomatal resistance in leafgasexchange modules and perhaps also SCOPE model code
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
/g/data/xe2/ya6227/daesim2-analysis-env/lib/python3.9/site-packages/daesim/boundarylayer.py:305: RuntimeWarning: divide by zero encountered in divide
  delta_bl = np.minimum(self.k_wl * np.sqrt(d/u), self.k_wl * np.sqrt(d/0.05))  ## boundary layer thickness (m), see Nobel (2009) p. 337, Eq. 7.10
